package com.thingtrack.konekti.view.addon.ui;

import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.VerticalLayout;

public class DataGridPaginatedView<T> extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private PaginationToolbar<T> paginationToolbar_1;
	@AutoGenerated
	private DataGridView dataGridView_1;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public DataGridPaginatedView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}
	
	public void setBindingSource(BindingSource<?> bindingSource){
		dataGridView_1.setBindingSource(bindingSource);
		paginationToolbar_1.setBindingSource(bindingSource);
	}
	
	public BindingSource<?> getBindingSource(){
		return dataGridView_1.getBindingSource();
	}
	
	
	public DataGridView getDataGridView(){
		return dataGridView_1;
	}
	
	public PaginationToolbar<T> getPaginationToolbar(){
		return paginationToolbar_1;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// dataGridView_1
		dataGridView_1 = new DataGridView();
		dataGridView_1.setImmediate(false);
		dataGridView_1.setWidth("100.0%");
		dataGridView_1.setHeight("100.0%");
		mainLayout.addComponent(dataGridView_1);
		mainLayout.setExpandRatio(dataGridView_1, 1.0f);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		
		// paginationToolbar_1
		paginationToolbar_1 = new PaginationToolbar(0, null);
		paginationToolbar_1.setImmediate(false);
		paginationToolbar_1.setWidth("-1px");
		paginationToolbar_1.setHeight("-1px");
		horizontalLayout_1.addComponent(paginationToolbar_1);
		horizontalLayout_1.setComponentAlignment(paginationToolbar_1,
				new Alignment(6));
		
		return horizontalLayout_1;
	}
	
	
	public void setImmediate(boolean value){
		dataGridView_1.setImmediate(value);
	}
	
	public void setSelectable(boolean value){
		dataGridView_1.setSelectable(value);
	}
	
	public void setMultiSelect(boolean value){
		dataGridView_1.setMultiSelect(value);
	}
	
	public Object getValue(){
		return dataGridView_1.getValue();
	}

}
