package com.thingtrack.konekti.view.web.form.field;

import java.util.ArrayList;
import java.util.List;

import org.vaadin.addon.customfield.CustomField;
import org.vaadin.addons.locationtextfield.GeocodedLocation;

import com.thingtrack.konekti.view.web.form.internal.AddressInputComponent;
import com.thingtrack.konekti.view.web.form.internal.CoordinatesInputComponentBack;
import com.thingtrack.konekti.view.web.form.internal.ExtendedGoogleGeocoder;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.Property.ValueChangeNotifier;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Field;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.Reindeer;

public class LocationField extends CustomField implements ValueChangeListener, ValueChangeNotifier{

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private TabSheet tabSheet;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private CoordinatesInputComponentBack coordinatesInputComponent;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private AddressInputComponent addressInputComponent;
	
	private ValueChangeListener listener;
	private GeocodedLocation geocodedLocation;
	
	private List<ValueChangeListener> listeners;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LocationField() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		tabSheet.setStyleName(Reindeer.TABSHEET_MINIMAL);
		
		listeners = new ArrayList<ValueChangeListener>();
		
		//Assign the Extended Google Geocoder
		addressInputComponent.setLocationProvider(ExtendedGoogleGeocoder.getInstance());
		coordinatesInputComponent.setLocationProvider(ExtendedGoogleGeocoder.getInstance()); 
		
		//Pass the LocationField like listener to the input fields
		addressInputComponent.addListener(this);
		coordinatesInputComponent.addListener(this);
	}

	@Override
	public Class<?> getType() {
		return GeocodedLocation.class;
	}
	
	@Override
	public Object getValue() {
		return geocodedLocation;
	}
	
	@Override
	public void setValue(Object newValue) throws ReadOnlyException,
			ConversionException {
		
		if(newValue == null)
			return;
		
		if(newValue != null && !(newValue instanceof GeocodedLocation))
			throw new ConversionException("There is an " + GeocodedLocation.class.getSimpleName()); 
		
		geocodedLocation = (GeocodedLocation) newValue;
		
		coordinatesInputComponent.setValue(geocodedLocation);
	}
	
	@Override
	public void valueChange(Property.ValueChangeEvent event) {
		 
		 Property property = event.getProperty();
		 
		 geocodedLocation = (GeocodedLocation) property.getValue();
		 
		 if(property instanceof AddressInputComponent && coordinatesInputComponent.getValue() != geocodedLocation){
			 coordinatesInputComponent.setValue(geocodedLocation);
		 }
		 else if(property instanceof CoordinatesInputComponentBack && addressInputComponent.getValue() != geocodedLocation){
			 addressInputComponent.setValue(geocodedLocation);
		 }
		 
		 for(ValueChangeListener listener : listeners)
			listener.valueChange(new Field.ValueChangeEvent(LocationField.this));
	}
	
	@Override
	public void addListener(ValueChangeListener listener) {
		listeners.add(listener);
	}

	@Override
	public void removeListener(ValueChangeListener listener) {
		listeners.remove(listener);		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("-1px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("-1px");
		setHeight("-1px");
		
		// tabSheet
		tabSheet = buildTabSheet();
		mainLayout.addComponent(tabSheet);
		
		return mainLayout;
	}

	@AutoGenerated
	private TabSheet buildTabSheet() {
		// common part: create layout
		tabSheet = new TabSheet();
		tabSheet.setImmediate(true);
		tabSheet.setWidth("-1px");
		tabSheet.setHeight("-1px");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		tabSheet.addTab(verticalLayout_2, "Direcci√≥n", null);
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		tabSheet.addTab(verticalLayout_3, "Coordenadas", null);
		
		return tabSheet;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("-1px");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		
		// addressInputComponent
		addressInputComponent = new AddressInputComponent();
		addressInputComponent.setImmediate(false);
		addressInputComponent.setWidth("-1px");
		addressInputComponent.setHeight("-1px");
		verticalLayout_2.addComponent(addressInputComponent);
		verticalLayout_2.setComponentAlignment(addressInputComponent,
				new Alignment(48));
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("-1px");
		verticalLayout_3.setHeight("-1px");
		verticalLayout_3.setMargin(false);
		
		// coordinatesInputComponent
		coordinatesInputComponent = new CoordinatesInputComponentBack();
		coordinatesInputComponent.setImmediate(false);
		coordinatesInputComponent.setWidth("-1px");
		coordinatesInputComponent.setHeight("-1px");
		verticalLayout_3.addComponent(coordinatesInputComponent);
		verticalLayout_3.setComponentAlignment(coordinatesInputComponent,
				new Alignment(48));
		
		return verticalLayout_3;
	}

}
