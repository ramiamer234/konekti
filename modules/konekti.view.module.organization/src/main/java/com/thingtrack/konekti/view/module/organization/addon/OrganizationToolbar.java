package com.thingtrack.konekti.view.module.organization.addon;

import java.io.Serializable;

import org.vaadin.peter.buttongroup.ButtonGroup;

import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.thingtrack.konekti.view.addon.data.BindingSource.IndexChangeEvent;
import com.thingtrack.konekti.view.addon.data.BindingSource.IndexChangeListener;
import com.thingtrack.konekti.view.addon.ui.AbstractToolbar;
import com.thingtrack.konekti.view.kernel.ui.layout.IViewContainer;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.terminal.gwt.client.MouseEventDetails;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.ComponentContainer;
import com.vaadin.ui.HorizontalLayout;

@SuppressWarnings("serial")
public class OrganizationToolbar extends AbstractToolbar {
	@AutoGenerated
	private HorizontalLayout toolbarLayout;

	@AutoGenerated
	private Button btnRefreshOrganization;
	@AutoGenerated
	private Button btnAddOrganization;
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	
	private int position = 0;
			
	// navigator button listeners
	private ClickRefreshOrganizationButtonListener listenerRefreshOrganizationButton = null;
	private ClickAddOrganizationButtonListener listenerAddOrganizationButton = null;
	
	private IViewContainer viewContainer;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */	
	public OrganizationToolbar(int position, final BindingSource<?> bindingSource, IViewContainer viewContainer) {
		super(position, bindingSource);
			
		buildMainLayout();

		// TODO add user code here
		this.position = position;
		this.viewContainer = viewContainer;
		
		setBindingSource(bindingSource);

		btnRefreshOrganization.addListener(new ClickListener() {			
			public void buttonClick(ClickEvent event) {				
				if (listenerRefreshOrganizationButton != null)
					listenerRefreshOrganizationButton.refreshOrganizationButtonClick(new ClickNavigationEvent(event.getButton(), event.getComponent() , null, null, 0));					
				
			}
		});
		
		btnAddOrganization.addListener(new ClickListener() {			
			public void buttonClick(ClickEvent event) {				
				if (listenerAddOrganizationButton != null)
					listenerAddOrganizationButton.addOrganizationButtonClick(new ClickNavigationEvent(event.getButton(), event.getComponent() , null, null, 0));					
				
			}
		});
		
	}
	
	@Override
	public int getPosition() {
		return this.position;
		
	}

	@Override
	public ComponentContainer getContent() {
		return this.toolbarLayout;
		
	}
	public void addListenerAddOrganizationButton(ClickAddOrganizationButtonListener listener) {
		this.listenerAddOrganizationButton = listener;
		
	}
	public void addListenerRefreshOrganizationButton(ClickRefreshOrganizationButtonListener listener) {
		this.listenerRefreshOrganizationButton = listener;
		
	}
	
	public interface ClickAddOrganizationButtonListener extends Serializable {
        public void addOrganizationButtonClick(ClickNavigationEvent event);

    }
	public interface ClickRefreshOrganizationButtonListener extends Serializable {
        public void refreshOrganizationButtonClick(ClickNavigationEvent event);

    }
	
	public class ClickNavigationEvent extends ClickEvent {
		private int index;
		private Object register;
		
		public ClickNavigationEvent(Button button, Component source) {
			button.super(source);
			
		}

		public ClickNavigationEvent(Button button, Component source, MouseEventDetails details) {
			button.super(source, details);
			
		}

		public ClickNavigationEvent(Button button, Component source, MouseEventDetails details, Object register, int index) {
			button.super(source, details);
			
			this.index = index;
			this.register = register;
		}

		public int getIndex() {
			return this.index;
			
		}
		
		public Object getRegister() {
			return this.register;
			
		}
		
	  }
		
	@Override
	public void setBindingSource(BindingSource<?> bindingSource) {
		this.bindingSource = bindingSource;
		
		// add change index binding source
		if (bindingSource != null) {
			bindingSource.addListenerToolBar((IndexChangeListener)this);
			
		}
		
	}

	@Override
	public void bindingSourceIndexChange(IndexChangeEvent event) {

	}
	
	@AutoGenerated
	private void buildMainLayout() {
		toolbarLayout = buildToolbarLayout();
		addComponent(toolbarLayout);
		
	}
	
	@AutoGenerated
	private HorizontalLayout buildToolbarLayout() {		
		toolbarLayout = new HorizontalLayout();
		toolbarLayout.setImmediate(false);
		toolbarLayout.setSpacing(true);
		
		ButtonGroup organizationButtonGroup = new ButtonGroup();
		toolbarLayout.addComponent(organizationButtonGroup);

		// btnLockEquipment
		btnRefreshOrganization = new Button();
		btnRefreshOrganization.setCaption("Refrescar Organización");
		btnRefreshOrganization.setImmediate(true);
		btnRefreshOrganization.setWidth("-1px");
		btnRefreshOrganization.setHeight("-1px");
		btnRefreshOrganization.setIcon(new ThemeResource("../konekti/images/icons/organization-module/arrow-circle-315-left.png"));
		
		organizationButtonGroup.addButton(btnRefreshOrganization);
		
		// btnLockEquipment
		btnAddOrganization = new Button();
		btnAddOrganization.setCaption("Añadir Organización");
		btnAddOrganization.setImmediate(true);
		btnAddOrganization.setWidth("-1px");
		btnAddOrganization.setHeight("-1px");
		btnAddOrganization.setIcon(new ThemeResource("../konekti/images/icons/organization-module/building--plus.png"));
		
		organizationButtonGroup.addButton(btnAddOrganization);
		
		return toolbarLayout;
	}

	@Override
	protected void updateLabels() {
		btnRefreshOrganization.setCaption(getI18N().getMessage("com.thingtrack.konekti.view.module.organization.addon.OrganizationToolbar.btnRefreshOrganization.caption"));
		btnRefreshOrganization.setDescription(getI18N().getMessage("com.thingtrack.konekti.view.module.organization.addon.OrganizationToolbar.btnRefreshOrganization.description"));
		btnAddOrganization.setCaption(getI18N().getMessage("com.thingtrack.konekti.view.module.organization.addon.OrganizationToolbar.btnAddOrganization.caption"));
		btnAddOrganization.setDescription(getI18N().getMessage("com.thingtrack.konekti.view.module.organization.addon.OrganizationToolbar.btnAddOrganization.description"));
		
	}
}
